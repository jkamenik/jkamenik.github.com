<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: planning | Random Software Inklings]]></title>
  <link href="http://jkamenik.github.com/blog/categories/planning/atom.xml" rel="self"/>
  <link href="http://jkamenik.github.com/"/>
  <updated>2014-02-28T22:17:25-05:00</updated>
  <id>http://jkamenik.github.com/</id>
  <author>
    <name><![CDATA[John T. Kamenik]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TDC Prototype]]></title>
    <link href="http://jkamenik.github.com/blog/2013/09/28/tdc-prototype/"/>
    <updated>2013-09-28T14:58:00-04:00</updated>
    <id>http://jkamenik.github.com/blog/2013/09/28/tdc-prototype</id>
    <content type="html"><![CDATA[<p>In a <a href="{%%20post_url%202013-09-01-technical-debt-calculator%20%}">previous post</a> I talked about creating a Technical Debt Calculator.  And in an <a href="{%%20post_url%202012-08-14-using-keynote-for-mockups%20%}">even earlier</a> post I talked about using Keynote to mockup UIs before coding.  Here I revisit the TDC with a Keynote mockup.</p>

<!-- more -->


<h2>Working prototype</h2>

<p>The <a href="/assets/Technical%20Debt%20Calculator.pdf">working prototype</a> is a clickable PDF.  You will need Adobe Acrobat Reader or a Mac computer.  From there just download the PDF and play with it.</p>

<p>I used concepts that I gained from working with <a href="http://keynotopia.com/">Keynotopia</a>.  Keynotopdia is an awesome library, which you should own, but at a minimum you should check out their tutorials <a href="">here</a>.</p>

<p>I did not use any assets from their library because their License doesn't allow me to share the Keynote files if I do.  However, I wanted to allow people to download my base library and hopefully help me improve my design.  The Keynote file can be found <a href="/assets/Technical%20Debt%20Calculator.key">here</a>.</p>

<p>Let me know what you think, in the comments below.  In a later post I will talk about my findings.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Technical Debt Calculator]]></title>
    <link href="http://jkamenik.github.com/blog/2013/09/01/technical-debt-calculator/"/>
    <updated>2013-09-01T20:40:00-04:00</updated>
    <id>http://jkamenik.github.com/blog/2013/09/01/technical-debt-calculator</id>
    <content type="html"><![CDATA[<p>All projects have some amount of Technical Debt.  And for projects I manage I am tired of keeping that knowledge in my brain.  My idea, and an example of UI mocking, is to create a technical debt calculator which can store the choices made on a project and map how those choice interfere with other choices.</p>

<p>The term Technical Debt refers to "any work that needs to be performed before a particular job can be complete."  That is true, but I don't like the wording.  Instead I am going to define it as "any choice that makes future progress more difficult or impossible".</p>

<p>A project is defined by the choices.  Good or bad, every choice adds debt that must be juggled.  In fact, when a person is "in the know" that is referring to the fact that they know most-if-not-all the technical debt of a given project.  I find those people to be useful as a well of knowledge, but not as forward thinkers.</p>

<p>There is something about keeping all the Technical Debt knowledge that makes you adverse to change.  It isn't technical debt that kills projects per se it is the keepers of technical debt that resist change that do.</p>

<!-- more -->


<p>My drive for this project is to not become a keeper-of-technical-debt on any project, and to communicate the debt clearly.  Often times when a project starts the time from talk to fully formed featured is hours or days.  1 - 3 years in and the same amount of effort is 1 to 2 days.  And on large projects that have taken several direct changes the time can be 1 to 2 weeks.  The only change being the number of previous choices.</p>

<h2>The good choices</h2>

<p>My calculator is meant only to track the bad choices or old choices.  There are some "good" choices that will slow forward progress, but ultimately prevent larger issues.  Here is a short list of something that will add time to the project but should NOT be considered technical debt:</p>

<ol>
<li>TDD/BDD</li>
<li>Agile methods</li>
<li>Using existing frameworks</li>
<li>QA</li>
<li>Code reviews</li>
<li>Local builds</li>
<li>Continuous integration</li>
<li>Saying "no"</li>
<li>Having confidence and a direction</li>
</ol>


<h2>Existing State</h2>

<p>I spend a little bit of time with pen and paper taking notes and drawling prototypes.  In the future I will expand on these ideas, but for how here they are in their raw form.</p>

<p><a href="{{%20root_url%20}}/images/tech-debt-calc/tech-debt-calc1.png">First set of designs</a></p>

<p><a href="{{%20root_url%20}}/images/tech-debt-calc/tech-debt-calc2.png">Schema Notes</a></p>

<p><a href="{{%20root_url%20}}/images/tech-debt-calc/tech-debt-calc3.png">First redesign</a></p>

<p><a href="{{%20root_url%20}}/images/tech-debt-calc/tech-debt-calc4.png">First redesign cont.</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bunco]]></title>
    <link href="http://jkamenik.github.com/blog/2012/11/10/bunco/"/>
    <updated>2012-11-10T10:30:00-05:00</updated>
    <id>http://jkamenik.github.com/blog/2012/11/10/bunco</id>
    <content type="html"><![CDATA[<p>The rules of Bunco are very easy, but you really do need to have 12 players or so.  Mel and I were able to modify the rules to work better for just two players, but it is very annoying to have to have record score with such a fast paced game.  I would like to eventually allow Mel and I to play the game over the internet like <em>Words with Friends</em>.</p>

<p>See: <a href="http://en.wikipedia.org/wiki/Bunco">Bunco</a></p>

<!-- more -->


<h2>Rules</h2>

<p>Like I siad the rule are very easy, but they can and do change based on the group you are with.  The official Bunco site has the rules for a full group of 12 people.  And they only deal with multiples of 4.  We are 2 people so we are going to modify the rules a bit.  They are as follows:</p>

<ol>
<li>There are 6 rounds (each corresponding to a number on the die)</li>
<li>Each player roles 3 dice</li>
<li>1 point is gained for each die matching the round number</li>
<li>5 points are gained if all dice match (but don't match the round number, i.e. 5,5,5 in round 1)</li>
<li>21 points are gained if all dice match the round number</li>
<li>The player keeps rolling until no points are gained in a role</li>
<li>The first player to 21 points wins the round</li>
<li>The player that wins the most round (4 of 6) wins</li>
</ol>


<h2>Aproach</h2>

<p>I find that if I approach a project from Ivory tower then it ends up being to big and I will not start anything.  I find that if you split things up into distinct steps it is easy to get started.  Also, between each step you can evaluate the success over the previous step, expand or contract the next step, or change directions entirely.</p>

<h3>Phase 1 - Infrastructure / Design / Score Card</h3>

<p>This phase is probably too big, but the end goal is to have a clean but simple score board.  It has to work, but it has to work well and be better then a pen and paper.  Also, part of the design we have to choose the infrastructure including: the online hosting provider, the language, the libraries, and the client.</p>

<h3>Phase 2 - Add Dice</h3>

<p>Once we have a simple score board going it shouldn't be too much work to add rolling of the dice to the game.  This step is kept purposely small because there are likely a lot of things learned in the previous section and will bleed into this phase.</p>

<h3>Phase 3 - Multiplayer</h3>

<p>The end goal is to be able to have two players to play over the internet.  So we have to think about things like maintaining sessions, user signups, tracking stats, keeping users in sync, and realtime signaling.</p>

<p>This section is way to big, but it is too early to go into too much detail.  It is going to be interesting to see how
close I get to my ultimate goal, and how long it takes to get there.</p>
]]></content>
  </entry>
  
</feed>
